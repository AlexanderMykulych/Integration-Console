<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Terrasoft.DB.MSSql</name>
    </assembly>
    <members>
        <member name="M:Terrasoft.DB.MSSql.MSSqlEngine.BuildNextValueSequenceQuerySqlText(System.Text.StringBuilder,Terrasoft.Core.DB.Sequence)">
            <summary>
            Builds SQL text for getting next value for sequence. <paramref name="sb"/>.
            </summary>
            <param name="sb">Builder for sql text string.</param>
            <param name="sequence">Sequence object.</param>
        </member>
        <member name="M:Terrasoft.DB.MSSql.MSSqlEngine.BuildCreateSequenceQuerySqlText(System.Text.StringBuilder,Terrasoft.Core.DB.Sequence)">
            <summary>
            Builds SQL text for creating sequence in DB. <paramref name="sb"/>.
            </summary>
            <param name="sb">Builder for sql text string.</param>
            <param name="sequence">Sequence object.</param>
        </member>
        <member name="M:Terrasoft.DB.MSSql.MSSqlEngine.BuildDropSequenceQuerySqlText(System.Text.StringBuilder,Terrasoft.Core.DB.Sequence)">
            <summary>
            Builds SQL text for droping sequence from DB. <paramref name="sb"/>.
            </summary>
            <param name="sb">Builder for sql text string.</param>
            <param name="sequence">Sequence object.</param>
        </member>
        <member name="M:Terrasoft.DB.MSSql.MSSqlEngine.BuildExistSequenceQuerySqlText(System.Text.StringBuilder,Terrasoft.Core.DB.Sequence)">
            <summary>
            Builds SQL text for checking existence sequence in DB. <paramref name="sb"/>.
            </summary>
            <param name="sb">Builder for sql text string.</param>
            <param name="sequence">Sequence object.</param>
        </member>
        <member name="M:Terrasoft.DB.MSSql.MSSqlEngine.GetColumnDefValue(Terrasoft.Core.Entities.EntitySchemaColumn,System.Boolean)">
            <summary>
            Returns SQL text for default value of a column.
            </summary>
            <param name="entitySchemaColumn">Column.</param>
            <param name="isWrapped">Flag that indicates whether value in text is wrapped in parentheses.</param>
            <returns>SQL text for default value of a column.</returns>
        </member>
        <member name="M:Terrasoft.DB.MSSql.MSSqlEngine.GetColumnDefValue(Terrasoft.Core.Entities.EntitySchemaColumn)">
            <summary>
            Returns SQL text for default value of a column.
            </summary>
            <param name="entitySchemaColumn">Column.</param>
            <returns>SQL text for default value of a column.</returns>
        </member>
        <member name="M:Terrasoft.DB.MSSql.MSSqlEngine.GetColumnDefValue(Terrasoft.Core.Entities.EntitySchemaColumn,System.String)">
            <summary>
            Returns SQL text for default value of a column.
            </summary>
            <param name="entitySchemaColumn">Column.</param>
            <param name="dbDefValue">Default value format on database level.</param>
            <returns>SQL text for default value of a column.</returns>
        </member>
        <member name="M:Terrasoft.DB.MSSql.MSSqlEngine.BuildRowLockHintSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.RowLockHint)">
            <summary>
            Builds SQL text for "Rowlock" table hint.
            </summary>
            <param name="sb"><see cref="T:System.Text.StringBuilder"/> instance that forms the query text.</param>
            <param name="rowLockSqlHint">Table hint "Rowlock".</param>
        </member>
        <member name="M:Terrasoft.DB.MSSql.MSSqlMetaScript.GetForeignKeysDataReader(Terrasoft.Core.DB.DBExecutor,System.String)">
            <summary>
            Returns foreign keys data reader.
            </summary>
            <param name="dbExecutor">Instance of <see cref="T:Terrasoft.Core.DB.DBExecutor"/>. Provides DB query execution.</param>
            <param name="entitySchemaName">Schema name to get foreign keys for.</param>
            <returns><see cref="T:System.Data.IDataReader"/>.</returns>
        </member>
        <member name="M:Terrasoft.DB.MSSql.MSSqlMetaScript.GetIsDBLevelRequirementTypeColumn(Terrasoft.Core.Entities.EntitySchema,Terrasoft.Core.Entities.EntitySchemaColumn)">
            <summary>
            Determines if column value is required on database level.
            </summary>
            <param name="entitySchema">Schema.</param>
            <param name="entitySchemaColumn">Column in schema.</param>
            <returns>Value that indicates whether column value is required on database level.</returns>
        </member>
        <member name="M:Terrasoft.DB.MSSql.MSSqlMetaScript.GetIsDefValueTypeColumn(Terrasoft.Core.Entities.EntitySchema,Terrasoft.Core.Entities.EntitySchemaColumn)">
            <summary>
            Determines if column is of type that requires default value.
            </summary>
            <param name="entitySchema">Schema.</param>
            <param name="entitySchemaColumn">Column in schema.</param>
            <returns>Value that indicates whether column is of type that requires default value.</returns>
        </member>
        <member name="M:Terrasoft.DB.MSSql.MSSqlMetaScript.GetIsForeignKeyCascade(System.Data.IDataReader)">
            <summary>
            Determines whether foreign key is cascade.
            </summary>
            <param name="dataReader">>Instance of <see cref="T:Terrasoft.Core.DataReader"/> to read property.</param>
            <returns><c>true</c> if foreign key is cascade. Otherwise returns <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.DB.MSSql.MSSqlMetaScript.GetIsIndexUnique(System.Data.IDataReader)">
            <summary>
            Determines whether index is unique.
            </summary>
            <param name="dataReader">>Instance of <see cref="T:Terrasoft.Core.DataReader"/> to read property.</param>
            <returns><c>true</c> if index is unique. Otherwise returns <c>false</c>.</returns>
        </member>
    </members>
</doc>
